{"ast":null,"code":"const isiData = [{\n  id: 1,\n  step: \"1. Buat project baru, tambahkan line ini di gradle App\",\n  code: \"implementation 'com.android.volley:volley:1.1.1'\"\n}, {\n  id: 2,\n  step: \"2. Tambahkan internet permisssion pada Android Manifest\",\n  code: \"\\n        &lt;manifest xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;<br />\\n        package=&quot;com.example.volleygithub&quot;&gt;<br />\\n    <br />\\n        &lt;uses-permission android:name=&quot;android.permission.INTERNET&quot; /&gt;<br />\\n    <br />\\n        &lt;application<br />\\n            android:allowBackup=&quot;true&quot;<br />\\n            android:icon=&quot;@mipmap/ic_launcher&quot;<br />\\n            android:label=&quot;@string/app_name&quot;<br />\\n            android:roundIcon=&quot;@mipmap/ic_launcher_round&quot;<br />\\n            android:supportsRtl=&quot;true&quot;<br />\\n            android:theme=&quot;@style/AppTheme&quot;&gt;<br />\\n    <br />\\n            &lt;activity android:name=&quot;.MainActivity&quot; &gt;<br />\\n                &lt;intent-filter&gt;<br />\\n                    &lt;action android:name=&quot;android.intent.action.MAIN&quot; /&gt;<br />\\n    <br />\\n                    &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt;<br />\\n                &lt;/intent-filter&gt;<br />\\n            &lt;/activity&gt;<br />\\n    <br />\\n        &lt;/application&gt;<br />\\n    &lt;/manifest&gt;                   \"\n}, {\n  id: 3,\n  step: \"3. buat file .java baru dengan nama AppSingleton, isi dengan :\",\n  code: \"\\n        import android.content.Context;\\nimport android.graphics.Bitmap;\\nimport android.util.LruCache;\\n\\nimport com.android.volley.Request;\\nimport com.android.volley.RequestQueue;\\nimport com.android.volley.toolbox.ImageLoader;\\nimport com.android.volley.toolbox.Volley;\\n\\n/**\\n * Created by androidtutorialpoint on 5/11/16.\\n */\\npublic class AppSingleton {\\n    private static AppSingleton mAppSingletonInstance;\\n    private RequestQueue mRequestQueue;\\n    private ImageLoader mImageLoader;\\n    private static Context mContext;\\n\\n    private AppSingleton(Context context) {\\n        mContext = context;\\n        mRequestQueue = getRequestQueue();\\n\\n        mImageLoader = new ImageLoader(mRequestQueue,\\n                new ImageLoader.ImageCache() {\\n                    private final LruCache<String, Bitmap>\\n                            cache = new LruCache<String, Bitmap>(20);\\n\\n                    @Override\\n                    public Bitmap getBitmap(String url) {\\n                        return cache.get(url);\\n                    }\\n\\n                    @Override\\n                    public void putBitmap(String url, Bitmap bitmap) {\\n                        cache.put(url, bitmap);\\n                    }\\n                });\\n    }\\n\\n    public static synchronized AppSingleton getInstance(Context context) {\\n        if (mAppSingletonInstance == null) {\\n            mAppSingletonInstance = new AppSingleton(context);\\n        }\\n        return mAppSingletonInstance;\\n    }\\n\\n    public RequestQueue getRequestQueue() {\\n        if (mRequestQueue == null) {\\n            // getApplicationContext() is key, it keeps you from leaking the\\n            // Activity or BroadcastReceiver if someone passes one in.\\n            mRequestQueue = Volley.newRequestQueue(mContext.getApplicationContext());\\n        }\\n        return mRequestQueue;\\n    }\\n\\n    public <T> void addToRequestQueue(Request<T> req,String tag) {\\n        req.setTag(tag);\\n        getRequestQueue().add(req);\\n    }\\n\\n    public ImageLoader getImageLoader() {\\n        return mImageLoader;\\n    }\\n\\n    public void cancelPendingRequests(Object tag) {\\n        if (mRequestQueue != null) {\\n            mRequestQueue.cancelAll(tag);\\n        }\\n    }\\n}\\n\\n        \"\n}, {\n  id: 4,\n  step: \"1. Buat project baru, tambahkan line ini di gradle App\",\n  code: \"implementation 'com.android.volley:volley:1.1.1'\"\n}, {\n  id: 5,\n  step: \"1. Buat project baru, tambahkan line ini di gradle App\",\n  code: \"implementation 'com.android.volley:volley:1.1.1'\"\n}];\nexport default isiData;","map":{"version":3,"sources":["/home/glayone23/Documents/l200160140 github/android/volley-github/src/isi.js"],"names":["isiData","id","step","code"],"mappings":"AAAA,MAAMA,OAAO,GAAG,CACZ;AACIC,EAAAA,EAAE,EAAE,CADR;AAEIC,EAAAA,IAAI,EAAE,wDAFV;AAGIC,EAAAA,IAAI,EAAE;AAHV,CADY,EAMZ;AACIF,EAAAA,EAAE,EAAE,CADR;AAEIC,EAAAA,IAAI,EAAE,yDAFV;AAGIC,EAAAA,IAAI;AAHR,CANY,EAkCZ;AACIF,EAAAA,EAAE,EAAE,CADR;AAEIC,EAAAA,IAAI,EAAE,gEAFV;AAGIC,EAAAA,IAAI;AAHR,CAlCY,EA+GZ;AACIF,EAAAA,EAAE,EAAE,CADR;AAEIC,EAAAA,IAAI,EAAE,wDAFV;AAGIC,EAAAA,IAAI,EAAE;AAHV,CA/GY,EAoHZ;AACIF,EAAAA,EAAE,EAAE,CADR;AAEIC,EAAAA,IAAI,EAAE,wDAFV;AAGIC,EAAAA,IAAI,EAAE;AAHV,CApHY,CAAhB;AA2HA,eAAeH,OAAf","sourcesContent":["const isiData = [\n    {\n        id: 1,\n        step: \"1. Buat project baru, tambahkan line ini di gradle App\",\n        code: \"implementation 'com.android.volley:volley:1.1.1'\"\n    },\n    {\n        id: 2,\n        step: \"2. Tambahkan internet permisssion pada Android Manifest\",\n        code: `\n        &lt;manifest xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;<br />\n        package=&quot;com.example.volleygithub&quot;&gt;<br />\n    <br />\n        &lt;uses-permission android:name=&quot;android.permission.INTERNET&quot; /&gt;<br />\n    <br />\n        &lt;application<br />\n            android:allowBackup=&quot;true&quot;<br />\n            android:icon=&quot;@mipmap/ic_launcher&quot;<br />\n            android:label=&quot;@string/app_name&quot;<br />\n            android:roundIcon=&quot;@mipmap/ic_launcher_round&quot;<br />\n            android:supportsRtl=&quot;true&quot;<br />\n            android:theme=&quot;@style/AppTheme&quot;&gt;<br />\n    <br />\n            &lt;activity android:name=&quot;.MainActivity&quot; &gt;<br />\n                &lt;intent-filter&gt;<br />\n                    &lt;action android:name=&quot;android.intent.action.MAIN&quot; /&gt;<br />\n    <br />\n                    &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt;<br />\n                &lt;/intent-filter&gt;<br />\n            &lt;/activity&gt;<br />\n    <br />\n        &lt;/application&gt;<br />\n    &lt;/manifest&gt;                   `\n    },\n    {\n        id: 3,\n        step: \"3. buat file .java baru dengan nama AppSingleton, isi dengan :\",\n        code: `\n        import android.content.Context;\nimport android.graphics.Bitmap;\nimport android.util.LruCache;\n\nimport com.android.volley.Request;\nimport com.android.volley.RequestQueue;\nimport com.android.volley.toolbox.ImageLoader;\nimport com.android.volley.toolbox.Volley;\n\n/**\n * Created by androidtutorialpoint on 5/11/16.\n */\npublic class AppSingleton {\n    private static AppSingleton mAppSingletonInstance;\n    private RequestQueue mRequestQueue;\n    private ImageLoader mImageLoader;\n    private static Context mContext;\n\n    private AppSingleton(Context context) {\n        mContext = context;\n        mRequestQueue = getRequestQueue();\n\n        mImageLoader = new ImageLoader(mRequestQueue,\n                new ImageLoader.ImageCache() {\n                    private final LruCache<String, Bitmap>\n                            cache = new LruCache<String, Bitmap>(20);\n\n                    @Override\n                    public Bitmap getBitmap(String url) {\n                        return cache.get(url);\n                    }\n\n                    @Override\n                    public void putBitmap(String url, Bitmap bitmap) {\n                        cache.put(url, bitmap);\n                    }\n                });\n    }\n\n    public static synchronized AppSingleton getInstance(Context context) {\n        if (mAppSingletonInstance == null) {\n            mAppSingletonInstance = new AppSingleton(context);\n        }\n        return mAppSingletonInstance;\n    }\n\n    public RequestQueue getRequestQueue() {\n        if (mRequestQueue == null) {\n            // getApplicationContext() is key, it keeps you from leaking the\n            // Activity or BroadcastReceiver if someone passes one in.\n            mRequestQueue = Volley.newRequestQueue(mContext.getApplicationContext());\n        }\n        return mRequestQueue;\n    }\n\n    public <T> void addToRequestQueue(Request<T> req,String tag) {\n        req.setTag(tag);\n        getRequestQueue().add(req);\n    }\n\n    public ImageLoader getImageLoader() {\n        return mImageLoader;\n    }\n\n    public void cancelPendingRequests(Object tag) {\n        if (mRequestQueue != null) {\n            mRequestQueue.cancelAll(tag);\n        }\n    }\n}\n\n        `\n    },\n    {\n        id: 4,\n        step: \"1. Buat project baru, tambahkan line ini di gradle App\",\n        code: \"implementation 'com.android.volley:volley:1.1.1'\"\n    },\n    {\n        id: 5,\n        step: \"1. Buat project baru, tambahkan line ini di gradle App\",\n        code: \"implementation 'com.android.volley:volley:1.1.1'\"\n    },\n]\n\nexport default isiData"]},"metadata":{},"sourceType":"module"}